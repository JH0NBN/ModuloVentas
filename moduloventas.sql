-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.articulos
(
    idarticulo integer NOT NULL,
    idcategoria integer NOT NULL,
    codigo character varying(50) COLLATE pg_catalog."default",
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    precioventa numeric(11, 0) NOT NULL,
    stock integer NOT NULL,
    descripcion character varying(250) COLLATE pg_catalog."default" NOT NULL,
    estado bit(1),
    CONSTRAINT articulospkey PRIMARY KEY (idarticulo)
);

CREATE TABLE IF NOT EXISTS public.categorias
(
    idcategoria integer NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(250) COLLATE pg_catalog."default" NOT NULL,
    estado bit(1) NOT NULL,
    CONSTRAINT categoriaspkey PRIMARY KEY (idcategoria)
);

CREATE TABLE IF NOT EXISTS public.detalle_ingresos
(
    iddetalleingreso integer NOT NULL,
    idingreso integer NOT NULL,
    idarticulo integer NOT NULL,
    cantidad integer NOT NULL,
    precio numeric(11, 0) NOT NULL,
    CONSTRAINT detalleingresospkey PRIMARY KEY (iddetalleingreso)
);

CREATE TABLE IF NOT EXISTS public.detalle_ventas
(
    iddetalleventa integer NOT NULL,
    idventa integer NOT NULL,
    idarticulo integer NOT NULL,
    cantidad integer NOT NULL,
    precio numeric(11, 0) NOT NULL,
    descuento numeric(11, 0) NOT NULL,
    CONSTRAINT detalleventaspkey PRIMARY KEY (iddetalleventa)
);

CREATE TABLE IF NOT EXISTS public.ingresos
(
    idingreso integer NOT NULL,
    idprovedor integer NOT NULL,
    idusuario integer NOT NULL,
    tipocomprobante character varying(20) COLLATE pg_catalog."default" NOT NULL,
    seriecomprobante character varying(7) COLLATE pg_catalog."default",
    numcomprobante character varying(10) COLLATE pg_catalog."default" NOT NULL,
    fecha date NOT NULL,
    impuesto numeric(4, 0) NOT NULL,
    total numeric(11, 0) NOT NULL,
    estado character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT ingresospkey PRIMARY KEY (idingreso)
);

CREATE TABLE IF NOT EXISTS public.personas
(
    idpersona integer NOT NULL,
    tipopersona character varying(20) COLLATE pg_catalog."default" NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    tipodocumento character varying(20) COLLATE pg_catalog."default",
    numdocumento character varying(20) COLLATE pg_catalog."default",
    direccion character varying(70) COLLATE pg_catalog."default",
    telefono character varying(20) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT personaspkey PRIMARY KEY (idpersona)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    idrol integer NOT NULL,
    nombre character varying(30) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(100) COLLATE pg_catalog."default",
    estado bit(1),
    CONSTRAINT rolespkey PRIMARY KEY (idrol)
);

CREATE TABLE IF NOT EXISTS public.usuarios
(
    idusuario integer NOT NULL,
    idrol integer NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    tipodocumento character varying(20) COLLATE pg_catalog."default",
    numdocumento character varying(20) COLLATE pg_catalog."default",
    direccion character varying(70) COLLATE pg_catalog."default",
    telefono character varying(20) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    estado character varying(20) COLLATE pg_catalog."default",
    password character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT usuariospkey PRIMARY KEY (idusuario)
);

CREATE TABLE IF NOT EXISTS public.ventas
(
    idventa integer NOT NULL,
    idcliente integer NOT NULL,
    idusuario integer NOT NULL,
    tipocomprobante character varying(20) COLLATE pg_catalog."default" NOT NULL,
    seriecomprobante character varying(7) COLLATE pg_catalog."default",
    numcomprobante character varying(10) COLLATE pg_catalog."default" NOT NULL,
    fechahora date NOT NULL,
    impuesto numeric(4, 0) NOT NULL,
    total numeric(11, 0) NOT NULL,
    estado character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT ventaspkey PRIMARY KEY (idventa)
);

ALTER TABLE IF EXISTS public.articulos
    ADD CONSTRAINT idcategoria FOREIGN KEY (idcategoria)
    REFERENCES public.categorias (idcategoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.detalle_ingresos
    ADD CONSTRAINT idarticulo FOREIGN KEY (idarticulo)
    REFERENCES public.articulos (idarticulo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.detalle_ingresos
    ADD CONSTRAINT idingreso FOREIGN KEY (idingreso)
    REFERENCES public.ingresos (idingreso) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.detalle_ventas
    ADD CONSTRAINT idarticulo FOREIGN KEY (idarticulo)
    REFERENCES public.articulos (idarticulo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.detalle_ventas
    ADD CONSTRAINT idventa FOREIGN KEY (idventa)
    REFERENCES public.ventas (idventa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ingresos
    ADD CONSTRAINT idprovedor FOREIGN KEY (idingreso)
    REFERENCES public.personas (idpersona) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS ingresospkey
    ON public.ingresos(idingreso);


ALTER TABLE IF EXISTS public.ingresos
    ADD CONSTRAINT idusuario FOREIGN KEY (idusuario)
    REFERENCES public.usuarios (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT idrol FOREIGN KEY (idrol)
    REFERENCES public.roles (idrol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ventas
    ADD CONSTRAINT idcliente FOREIGN KEY (idcliente)
    REFERENCES public.personas (idpersona) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ventas
    ADD CONSTRAINT idusuario FOREIGN KEY (idusuario)
    REFERENCES public.usuarios (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;